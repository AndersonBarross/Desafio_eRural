{"ast":null,"code":"var _jsxFileName = \"C:\\\\negocios\\\\eagro\\\\p1\\\\frontend\\\\src\\\\pages\\\\room\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { MdVideocam, MdVideocamOff, MdMic, MdMicOff, MdClose } from \"react-icons/md\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { useLocation } from \"react-router-dom\";\nimport { Container, IconButton, ToolBar, VideoContainer, RoomName } from \"./styled\";\nimport Participant from \"../../components/participant\";\nimport { useRoom } from \"../../hooks/useRoom\";\nimport { calculateVideoCardSize } from \"../../services/screen\";\nimport { useVideo } from \"../../hooks/useVideo\";\nimport { useAudio } from \"../../hooks/useAudio\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Room = () => {\n  _s();\n\n  const history = useHistory();\n  const routeData = useLocation().state;\n  const [participants, setParticipants] = useState([]);\n  const [localParticipant, setLocalParticipant] = useState();\n  const {\n    connect,\n    disconnect\n  } = useRoom({\n    roomName: routeData === null || routeData === void 0 ? void 0 : routeData.roomName,\n    identity: routeData === null || routeData === void 0 ? void 0 : routeData.username\n  });\n  const {\n    isCameraOn,\n    toggleVideo\n  } = useVideo();\n  const {\n    isMicOn,\n    toggleAudio\n  } = useAudio();\n  const videoCard = calculateVideoCardSize(participants);\n  const renderRemoteParticipants = useCallback(() => participants.map(participant => /*#__PURE__*/_jsxDEV(Participant, {\n    width: videoCard.width,\n    height: videoCard.height,\n    participant: participant\n  }, participant.sid, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this)), [participants]);\n\n  const participantConnected = participant => {\n    setParticipants(prevParticipants => [...prevParticipants, participant]);\n  };\n\n  const participantDisconnected = participant => {\n    setParticipants(prevParticipants => prevParticipants.filter(p => p !== participant));\n  };\n\n  const disableTrackOnInit = (room, type) => {\n    const {\n      track\n    } = [...room.localParticipant[type].values()][0];\n    track.stop();\n    track.disable();\n  };\n\n  const handleOnCloseClick = () => {\n    disconnect();\n    history.push(\"/\");\n  };\n\n  useEffect(() => {\n    connect().then(roomResponse => {\n      roomResponse.on(\"participantDisconnected\", participantDisconnected);\n      roomResponse.on(\"participantConnected\", participantConnected);\n      roomResponse.participants.forEach(participantConnected);\n      setLocalParticipant(roomResponse.localParticipant);\n      disableTrackOnInit(roomResponse, \"videoTracks\");\n      disableTrackOnInit(roomResponse, \"audioTracks\");\n    });\n    return () => {\n      disconnect();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(VideoContainer, {\n      children: [localParticipant && /*#__PURE__*/_jsxDEV(Participant, {\n        width: videoCard.width,\n        height: participants.length > 0 ? videoCard.height : \"auto\",\n        isLocal: true,\n        participant: localParticipant\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), renderRemoteParticipants()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToolBar, {\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        isActive: isMicOn,\n        onClick: () => toggleAudio({\n          localParticipant\n        }),\n        children: isMicOn ? /*#__PURE__*/_jsxDEV(MdMic, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 22\n        }, this) : /*#__PURE__*/_jsxDEV(MdMicOff, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        isActive: true,\n        onClick: handleOnCloseClick,\n        children: /*#__PURE__*/_jsxDEV(MdClose, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        isActive: isCameraOn,\n        onClick: () => toggleVideo({\n          localParticipant\n        }),\n        children: isCameraOn ? /*#__PURE__*/_jsxDEV(MdVideocam, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(MdVideocamOff, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RoomName, {\n        children: [\"Room name: \", routeData.roomName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Room, \"J5FVb84qbhs0qoZSaa+m90G8IeM=\", false, function () {\n  return [useHistory, useLocation, useRoom, useVideo, useAudio];\n});\n\n_c = Room;\nexport default Room;\n\nvar _c;\n\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"sources":["C:/negocios/eagro/p1/frontend/src/pages/room/index.tsx"],"names":["MdVideocam","MdVideocamOff","MdMic","MdMicOff","MdClose","useCallback","useEffect","useState","useHistory","useLocation","Container","IconButton","ToolBar","VideoContainer","RoomName","Participant","useRoom","calculateVideoCardSize","useVideo","useAudio","Room","history","routeData","state","participants","setParticipants","localParticipant","setLocalParticipant","connect","disconnect","roomName","identity","username","isCameraOn","toggleVideo","isMicOn","toggleAudio","videoCard","renderRemoteParticipants","map","participant","width","height","sid","participantConnected","prevParticipants","participantDisconnected","filter","p","disableTrackOnInit","room","type","track","values","stop","disable","handleOnCloseClick","push","then","roomResponse","on","forEach","length"],"mappings":"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","sourcesContent":["import {\n  MdVideocam,\n  MdVideocamOff,\n  MdMic,\n  MdMicOff,\n  MdClose,\n} from \"react-icons/md\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { useLocation } from \"react-router-dom\";\nimport Video, { LocalParticipant } from \"twilio-video\";\n\nimport {\n  Container,\n  IconButton,\n  ToolBar,\n  VideoContainer,\n  RoomName,\n} from \"./styled\";\nimport Participant from \"../../components/participant\";\nimport { useRoom } from \"../../hooks/useRoom\";\nimport { calculateVideoCardSize } from \"../../services/screen\";\nimport { useVideo } from \"../../hooks/useVideo\";\nimport { useAudio } from \"../../hooks/useAudio\";\n\nconst Room = () => {\n  const history = useHistory();\n  const routeData = useLocation<{ username: string; roomName: string }>().state;\n  const [participants, setParticipants] = useState<Video.RemoteParticipant[]>(\n    []\n  );\n  const [localParticipant, setLocalParticipant] = useState<LocalParticipant>();\n  const { connect, disconnect } = useRoom({\n    roomName: routeData?.roomName,\n    identity: routeData?.username,\n  });\n  const { isCameraOn, toggleVideo } = useVideo();\n  const { isMicOn, toggleAudio } = useAudio();\n\n  const videoCard = calculateVideoCardSize(participants);\n\n  const renderRemoteParticipants = useCallback(\n    () =>\n      participants.map((participant: Video.RemoteParticipant) => (\n        <Participant\n          width={videoCard.width}\n          height={videoCard.height}\n          key={participant.sid}\n          participant={participant}\n        />\n      )),\n    [participants]\n  );\n\n  const participantConnected = (participant: Video.RemoteParticipant) => {\n    setParticipants((prevParticipants) => [...prevParticipants, participant]);\n  };\n\n  const participantDisconnected = (participant: Video.RemoteParticipant) => {\n    setParticipants((prevParticipants: Video.RemoteParticipant[]) =>\n      prevParticipants.filter((p: Video.RemoteParticipant) => p !== participant)\n    );\n  };\n\n  const disableTrackOnInit = (\n    room: Video.Room,\n    type: \"videoTracks\" | \"audioTracks\"\n  ) => {\n    const { track } = [...room.localParticipant[type].values()][0];\n    track.stop();\n    track.disable();\n  };\n\n  const handleOnCloseClick = () => {\n    disconnect();\n    history.push(\"/\");\n  };\n\n  useEffect(() => {\n    connect().then((roomResponse) => {\n      roomResponse.on(\"participantDisconnected\", participantDisconnected);\n      roomResponse.on(\"participantConnected\", participantConnected);\n      roomResponse.participants.forEach(participantConnected);\n      setLocalParticipant(roomResponse.localParticipant);\n      disableTrackOnInit(roomResponse, \"videoTracks\");\n      disableTrackOnInit(roomResponse, \"audioTracks\");\n    });\n\n    return () => {\n      disconnect();\n    };\n  }, []);\n\n  return (\n    <Container>\n      <VideoContainer>\n        {localParticipant && (\n          <Participant\n            width={videoCard.width}\n            height={participants.length > 0 ? videoCard.height : \"auto\"}\n            isLocal\n            participant={localParticipant}\n          />\n        )}\n        {renderRemoteParticipants()}\n      </VideoContainer>\n      <ToolBar>\n        <IconButton\n          isActive={isMicOn}\n          onClick={() => toggleAudio({ localParticipant })}\n        >\n          {isMicOn ? <MdMic /> : <MdMicOff />}\n        </IconButton>\n        <IconButton isActive onClick={handleOnCloseClick}>\n          <MdClose />\n        </IconButton>\n        <IconButton\n          isActive={isCameraOn}\n          onClick={() => toggleVideo({ localParticipant })}\n        >\n          {isCameraOn ? <MdVideocam /> : <MdVideocamOff />}\n        </IconButton>\n        <RoomName>Room name: {routeData.roomName}</RoomName>\n      </ToolBar>\n    </Container>\n  );\n};\n\nexport default Room;\n"]},"metadata":{},"sourceType":"module"}