{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\n\nconst useTrack = participant => {\n  _s();\n\n  const [videoTracks, setVideoTracks] = useState([]);\n  const [audioTracks, setAudioTracks] = useState([]);\n  const [isRemoteCameraOn, setIsRemoteCameraOn] = useState(false);\n  const [isRemoteMicOn, setIsRemoteMicOn] = useState(false);\n\n  const trackSubscribed = track => {\n    if (track.kind === \"video\") {\n      setVideoTracks(videoTracks => [...videoTracks, track]);\n    } else {\n      setAudioTracks(audioTracks => [...audioTracks, track]);\n    }\n  };\n\n  const trackUnsubscribed = track => {\n    if (track.kind === \"video\") {\n      setVideoTracks(videoTracks => videoTracks.filter(v => v !== track));\n    } else {\n      setAudioTracks(audioTracks => audioTracks.filter(a => a !== track));\n    }\n  };\n\n  const trackPublicationToTrack = trackMap => Array.from(trackMap.values()).map(publication => publication.track).filter(track => track !== null);\n\n  useEffect(() => {\n    setVideoTracks(trackPublicationToTrack(participant.videoTracks));\n    setAudioTracks(trackPublicationToTrack(participant.audioTracks));\n    participant.on(\"trackSubscribed\", trackSubscribed);\n    participant.on(\"trackUnsubscribed\", trackUnsubscribed);\n    participant.on(\"trackEnabled\", e => {\n      if (e.kind === \"video\") {\n        setIsRemoteCameraOn(true);\n        trackSubscribed(e);\n      } else {\n        setIsRemoteMicOn(true);\n      }\n    });\n    participant.on(\"trackDisabled\", e => {\n      if (e.kind === \"video\") {\n        setIsRemoteCameraOn(false);\n        trackSubscribed(e);\n      } else {\n        setIsRemoteMicOn(false);\n      }\n    });\n    return () => {\n      setVideoTracks([]);\n      setAudioTracks([]);\n      participant.removeAllListeners();\n    };\n  }, [participant]);\n  return {\n    videoTracks,\n    audioTracks,\n    isRemoteCameraOn,\n    isRemoteMicOn\n  };\n};\n\n_s(useTrack, \"ASCUL3QFHg0D563VRGKnovlL0dE=\");\n\nexport { useTrack };","map":{"version":3,"sources":["C:/negocios/eagro/p1/frontend/src/hooks/useTrack.ts"],"names":["useEffect","useState","useTrack","participant","videoTracks","setVideoTracks","audioTracks","setAudioTracks","isRemoteCameraOn","setIsRemoteCameraOn","isRemoteMicOn","setIsRemoteMicOn","trackSubscribed","track","kind","trackUnsubscribed","filter","v","a","trackPublicationToTrack","trackMap","Array","from","values","map","publication","on","e","removeAllListeners"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport {\n  AudioTrack,\n  AudioTrackPublication,\n  LocalParticipant,\n  RemoteParticipant,\n  Track,\n  VideoTrack,\n  VideoTrackPublication,\n} from \"twilio-video\";\nimport {\n  AudioTracks,\n  Tracks,\n  VideoTracks,\n} from \"../components/participant/types\";\n\nconst useTrack = (participant: LocalParticipant | RemoteParticipant) => {\n  const [videoTracks, setVideoTracks] = useState<Tracks[]>([]);\n  const [audioTracks, setAudioTracks] = useState<Tracks[]>([]);\n  const [isRemoteCameraOn, setIsRemoteCameraOn] = useState(false);\n  const [isRemoteMicOn, setIsRemoteMicOn] = useState(false);\n\n  const trackSubscribed = (track: Tracks) => {\n    if (track.kind === \"video\") {\n      setVideoTracks((videoTracks) => [...videoTracks, track]);\n    } else {\n      setAudioTracks((audioTracks) => [...audioTracks, track]);\n    }\n  };\n\n  const trackUnsubscribed = (track: VideoTrack | AudioTrack) => {\n    if (track.kind === \"video\") {\n      setVideoTracks((videoTracks) => videoTracks.filter((v) => v !== track));\n    } else {\n      setAudioTracks((audioTracks) => audioTracks.filter((a) => a !== track));\n    }\n  };\n\n  const trackPublicationToTrack = (\n    trackMap: Map<Track.SID, VideoTrackPublication | AudioTrackPublication>\n  ) =>\n    Array.from(trackMap.values())\n      .map((publication) => publication.track)\n      .filter((track) => track !== null);\n\n  useEffect(() => {\n    setVideoTracks(\n      trackPublicationToTrack(participant.videoTracks) as VideoTracks[]\n    );\n\n    setAudioTracks(\n      trackPublicationToTrack(participant.audioTracks) as AudioTracks[]\n    );\n\n    participant.on(\"trackSubscribed\", trackSubscribed);\n    participant.on(\"trackUnsubscribed\", trackUnsubscribed);\n    participant.on(\"trackEnabled\", (e) => {\n      if (e.kind === \"video\") {\n        setIsRemoteCameraOn(true);\n        trackSubscribed(e);\n      } else {\n        setIsRemoteMicOn(true);\n      }\n    });\n    participant.on(\"trackDisabled\", (e) => {\n      if (e.kind === \"video\") {\n        setIsRemoteCameraOn(false);\n        trackSubscribed(e);\n      } else {\n        setIsRemoteMicOn(false);\n      }\n    });\n\n    return () => {\n      setVideoTracks([]);\n      setAudioTracks([]);\n      participant.removeAllListeners();\n    };\n  }, [participant]);\n\n  return { videoTracks, audioTracks, isRemoteCameraOn, isRemoteMicOn };\n};\n\nexport { useTrack };\n"]},"metadata":{},"sourceType":"module"}