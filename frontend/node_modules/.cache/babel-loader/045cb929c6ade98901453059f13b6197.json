{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useState } from \"react\";\nimport Video from \"twilio-video\";\nimport { useHistory } from \"react-router\";\nimport api from \"../services/api\";\nexport const useRoom = ({\n  identity,\n  roomName\n}) => {\n  _s();\n\n  const history = useHistory();\n  const [room, setRoom] = useState(null);\n\n  if (!identity && !roomName) {\n    history.push(\"/\");\n  }\n\n  const connect = useCallback(async () => {\n    const response = await api.post(\"video/token\", {\n      identity,\n      room: roomName\n    });\n    const roomResponse = await Video.connect(response.data.token, {\n      name: roomName,\n      video: true,\n      audio: true\n    });\n    setRoom(roomResponse); // disableMicAndCanOnInit(roomResponse);\n\n    return roomResponse;\n  }, []);\n\n  const disconnect = () => {\n    setRoom(currentRoom => {\n      if (currentRoom && currentRoom.localParticipant.state === \"connected\") {\n        currentRoom.localParticipant.videoTracks.forEach(trackPublication => {\n          trackPublication.track.stop();\n          trackPublication.unpublish();\n        });\n        currentRoom.localParticipant.audioTracks.forEach(trackPublication => {\n          trackPublication.track.stop();\n          trackPublication.unpublish();\n        });\n        currentRoom === null || currentRoom === void 0 ? void 0 : currentRoom.disconnect();\n        return null;\n      }\n\n      return null;\n    });\n  };\n\n  return {\n    room,\n    connect,\n    disconnect\n  };\n};\n\n_s(useRoom, \"1QQr7/2RamKh/A26EpCpGwjocPo=\", false, function () {\n  return [useHistory];\n});","map":{"version":3,"sources":["C:/negocios/eagro/p1/frontend/src/hooks/useRoom.ts"],"names":["useCallback","useState","Video","useHistory","api","useRoom","identity","roomName","history","room","setRoom","push","connect","response","post","roomResponse","data","token","name","video","audio","disconnect","currentRoom","localParticipant","state","videoTracks","forEach","trackPublication","track","stop","unpublish","audioTracks"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AACA,OAAOC,KAAP,MAA4B,cAA5B;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA,OAAOC,GAAP,MAAgB,iBAAhB;AAOA,OAAO,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAoC;AAAA;;AACzD,QAAMC,OAAO,GAAGL,UAAU,EAA1B;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAc,IAAd,CAAhC;;AAEA,MAAI,CAACK,QAAD,IAAa,CAACC,QAAlB,EAA4B;AAC1BC,IAAAA,OAAO,CAACG,IAAR,CAAa,GAAb;AACD;;AAED,QAAMC,OAAO,GAAGZ,WAAW,CAAC,YAAY;AACtC,UAAMa,QAAQ,GAAG,MAAMT,GAAG,CAACU,IAAJ,CAAS,aAAT,EAAwB;AAC7CR,MAAAA,QAD6C;AAE7CG,MAAAA,IAAI,EAAEF;AAFuC,KAAxB,CAAvB;AAIA,UAAMQ,YAAY,GAAG,MAAMb,KAAK,CAACU,OAAN,CAAcC,QAAQ,CAACG,IAAT,CAAcC,KAA5B,EAAmC;AAC5DC,MAAAA,IAAI,EAAEX,QADsD;AAE5DY,MAAAA,KAAK,EAAE,IAFqD;AAG5DC,MAAAA,KAAK,EAAE;AAHqD,KAAnC,CAA3B;AAMAV,IAAAA,OAAO,CAACK,YAAD,CAAP,CAXsC,CAatC;;AACA,WAAOA,YAAP;AACD,GAf0B,EAexB,EAfwB,CAA3B;;AAiBA,QAAMM,UAAU,GAAG,MAAM;AACvBX,IAAAA,OAAO,CAAEY,WAAD,IAAiB;AACvB,UAAIA,WAAW,IAAIA,WAAW,CAACC,gBAAZ,CAA6BC,KAA7B,KAAuC,WAA1D,EAAuE;AACrEF,QAAAA,WAAW,CAACC,gBAAZ,CAA6BE,WAA7B,CAAyCC,OAAzC,CAAkDC,gBAAD,IAAsB;AACrEA,UAAAA,gBAAgB,CAACC,KAAjB,CAAuBC,IAAvB;AACAF,UAAAA,gBAAgB,CAACG,SAAjB;AACD,SAHD;AAIAR,QAAAA,WAAW,CAACC,gBAAZ,CAA6BQ,WAA7B,CAAyCL,OAAzC,CAAkDC,gBAAD,IAAsB;AACrEA,UAAAA,gBAAgB,CAACC,KAAjB,CAAuBC,IAAvB;AACAF,UAAAA,gBAAgB,CAACG,SAAjB;AACD,SAHD;AAIAR,QAAAA,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAED,UAAb;AAEA,eAAO,IAAP;AACD;;AAED,aAAO,IAAP;AACD,KAhBM,CAAP;AAiBD,GAlBD;;AAoBA,SAAO;AAAEZ,IAAAA,IAAF;AAAQG,IAAAA,OAAR;AAAiBS,IAAAA;AAAjB,GAAP;AACD,CA9CM;;GAAMhB,O;UACKF,U","sourcesContent":["import { useCallback, useState } from \"react\";\nimport Video, { Room } from \"twilio-video\";\nimport { useHistory } from \"react-router\";\n\nimport api from \"../services/api\";\n\ninterface Params {\n  identity: string;\n  roomName: string;\n}\n\nexport const useRoom = ({ identity, roomName }: Params) => {\n  const history = useHistory();\n  const [room, setRoom] = useState<Room | null>(null);\n\n  if (!identity && !roomName) {\n    history.push(\"/\");\n  }\n\n  const connect = useCallback(async () => {\n    const response = await api.post(\"video/token\", {\n      identity,\n      room: roomName,\n    });\n    const roomResponse = await Video.connect(response.data.token, {\n      name: roomName,\n      video: true,\n      audio: true,\n    });\n\n    setRoom(roomResponse);\n\n    // disableMicAndCanOnInit(roomResponse);\n    return roomResponse;\n  }, []);\n\n  const disconnect = () => {\n    setRoom((currentRoom) => {\n      if (currentRoom && currentRoom.localParticipant.state === \"connected\") {\n        currentRoom.localParticipant.videoTracks.forEach((trackPublication) => {\n          trackPublication.track.stop();\n          trackPublication.unpublish();\n        });\n        currentRoom.localParticipant.audioTracks.forEach((trackPublication) => {\n          trackPublication.track.stop();\n          trackPublication.unpublish();\n        });\n        currentRoom?.disconnect();\n\n        return null;\n      }\n\n      return null;\n    });\n  };\n\n  return { room, connect, disconnect };\n};\n"]},"metadata":{},"sourceType":"module"}